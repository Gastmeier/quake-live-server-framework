// ****************************************************************************
//                                                                            *
//     Quake Live - server.cfg                                                *
//     Version 090217                                                         *
//                                                                            *
// ****************************************************************************

// Servers have the ability to run multiple gametypes, known as "factories." You should not add gameplay related
// cvars in the server config: they may get overwritten by the factory. For creating your own sets of gameplay rules,
// create a file ending in ".factories" inside baseq3/scripts, and refer to "Creating custom gametypes" in the
// server_readme.txt file.
// This config will override command line options.

// Be aware that factories can override any cvar, including ones specified in this config file.

// ............................. Minqlx Settings .............................//

// The SteamID64 of the server owner. This is should be set, otherwise minqlx can't tell who the owner is and will refuse to execute admin commands.
set qlx_owner

// A comma-separated list of plugins that should be loaded at launch.
// Default: plugin_manager, essentials, motd, permission, ban, silence, clan, names, log, workshop.
set qlx_plugins "plugin_manager, essentials, motd, permission, docs, log, workshop"

// The path (either relative or absolute) to the directory with the plugins.
// Default: minqlx-plugins
// IMPORTANT: Do not change this setting because the Docker image relies on this location.
// set qlx_pluginsPath

// The default database to use. You should not change this unless you know what you're doing.
// Default: Redis
// IMPORTANT: Do not change this setting.
// set qlx_database

// The prefix used before command names in order to execute them.
// Default: !
// set qlx_commandPrefix

// The address to the Redis database. Can be a path if qlx_redisUnixSocket is "1".
// Default: 127.0.0.1
// IMPORTANT: Do not change this setting because it pointing to the database server in the Docker network.
set qlx_redisAddress "redis"

// The Redis database number.
// Default: 0
// IMPORTANT: Do not change this setting because the Redis database is soley there for the Quake Live servers.
// set qlx_redisDatabase

// A boolean that determines whether or not qlx_redisAddress is a path to a UNIX socket.
// Default: 0
// IMPORTANT: Do not change this setting because the Docker image relies on the correct value.
// qlx_redisUnixSocket

// The password to the Redis server, if any.
// Default: None
// IMPORTANT: Do not change this setting because the Redis Docker container does not use a password.
// set qlx_redisPassword

// The maximum number of logs the server keeps. 0 means no limit.
// Default: 5
// set qlx_logs

// The maximum size in bytes of a log before it backs it up and starts on a fresh file. 0 means no limit.
// Default: 5000000 (5 MB)
// set qlx_logsSize

// ------ Minqlx Plugin: essentials -------
// Adds commands for the regular QLDS commands and some more. Adds functionality to restrict teamsize voting 
// and to pass votes before it fails if the majority votes yes.

// A boolean deciding whether or not it should automatically pass votes before they fail if the majority voted yes.
// Default: 1
// set qlx_votepass

// If qlx_votepass is 1, determines the percentage (in decimal) of in-game players required to vote before it 
// automatically passes any votes.
// Default: 0.33
// set qlx_votepassThreshold

// The minimum teamsize allowed to vote for. !teamsize can override this.
// Default: 1
// set qlx_teamsizeMinimum

// The maximum teamsize allowed to vote for. !teamsize can override this.
// Default: 8 (if teams are full and teamsize is above 8, players will not be visible on the scoreboard)
// set qlx_teamsizeMaximum

// ------ Minqlx Plugin: motd -------
// Adds commands to set a message of the day.

// The path to a sounds that is played when players connect and have the MOTD printed to them.
// Default: sound/vo/crash_new/37b_07_alt.wav
// set qlx_motdSound

// The header printed right before the MOTD itself.
// Default: ^6======= ^7Message of the Day ^6=======
// set qlx_motdHeader

// ------- Minqlx Plugin: log -------
// A plugin that logs chat and commands. All logs go to fs_homepath/chatlogs.

// The maximum number of logs to keep around. If set to 0, no maximum is enforced.
// Default: 0
// set qlx_chatlogs

// The maximum size of a log in bytes before it starts with a new one.
// Default: 5000000 (5 MB)
// set qlx_chatlogsSize

// ............................. Basic Settings ............................. //

// Hostname for server.
// IMPORTANT: Do not change this setting here but set it in the Docker Compose file.
// set sv_hostname "SERVERNAME"

// Server password - for private servers.
// IMPORTANT: Do not change this setting here but set it in the Docker Compose file.
// set g_password ""

// Server tags - Tags show up on the in-game server browser. This helps
// users filter servers.
//  e.g "crouch slide, classic, space, custom"
// example: sv_tags "custom, classic"
// set sv_tags "duel"

// ............................... Map Cycles ............................... //

// info: The .txt file used to cycle the maps on servers.
// There are several predefined mapcycles available that are listed below.
// You can also create your own custom mapcycle.
// "mappool.txt" - all maps
// "mappool_ca.txt" - Clan Arena
// "mappool_ctf.txt" - Capture the Flag
// "mappool_duel.txt" - Duel
// "mappool_ffa.txt" - Free for All
// "mappool_race.txt" - Race
// "mappool_tdm.txt" - Team Death Match
// IMPORTANT: Do not change this setting here but set it in the Docker Compose file.
set sv_mapPoolFile "mappool.txt"

// Default map
// Random Map - startRandomMap
// Specific map (factory is required) - map campgrounds ffa
// Default: set serverstartup "startRandomMap"
set serverstartup "startRandomMap"

// ............................ Client Settings ............................. //

// Number of player slots available.
// Default: set sv_maxClients "16"
// set sv_maxClients "16"

// Reserved slots, requires sv_privatePassword.
// Default: set sv_privateClients "0"
// set sv_privateClients "0"

// Reserved slots password.
// Default: set sv_privatePassword ""
// set sv_privatePassword ""

// ................................. Voting ................................. //

// Allow Voting.
// 1 - enabled
// 0 - disabled
// Default: set g_allowVote "1"
//
// RATIONALE
// A server without voting prevents the players on the server to decide which map
// they want to play next for example.
set g_allowVote "1"

// Delay allowing votes for X milliseconds after map load.
// Default: set g_voteDelay "0"
//
// RATIONALE
// To prevent a player with a faster machine to dictate the next map it is useful
// to prevent voting for some time so that the player with the slower machine has
// finished loading and is able to vote.
set g_voteDelay "5000"

// Limit users to X votes per map.
// 0 - no limit
// Default: set g_voteLimit "0"
//
// RATIONALE
// A player who just does not stop to vote can be annoying. But a server which prevents
// players from voting enough is also annoying. A good value should not be to small
// and not be too big.
// set g_voteLimit "10"

// Only allow votes from mid game
// default - set g_allowVoteMidGame "0"
//
// RATIONALE
// Voting mid game does not make sense in duel. A duel is played until the end or the person
// forfeits.
set g_allowVoteMidGame "0"

// Allow spectators to call votes
// Default: set g_allowSpecVote "0"
//
// RATIONALE
// A spectator should not be able to vote otherwise the players wanting to play a game need
// to wait for the spectators to also vote and hopefully vote yes.
set g_allowSpecVote "0"

// Add together the below values for which callvotes should be DISABLED:
// map              1
// map_restart      2
// nextmap          4
// gametype         8 (ex: "/callvote map campgrounds" will be allowed, but "/callvote map campgrounds ca" will fail)
// kick             16
// timelimit        32
// fraglimit        64
// shuffle          128
// teamsize         256
// cointoss/random  512
// loadouts         1024
// end-game voting  2048
// ammo (global)    4096
// timers (item)    8192
// e.g to disable map and nextmap: 1+4=5
//
// Default - set g_voteFlags "0"
//
// RATIONALE
// 1 - Of course.
// 2 - Does not make sense because mid match voting is disabled.
// 4 - Does not make sense because mid match voting is disabled.
// 8 - Do not allow to change game mode. A duel server stays a duel server.
// 16 - Do not allow to kick because it will be abused by friends and feels exluding,
// harms the community and the game
// 32 - Do not allow to change the timelimit because it will be used by better players to
// minimize their game time. Better players should play worse players and also under the same
// conditions as everybody else.
// 64 - Do not allow to change the timelimit because it will be used by better players to
// minimize their game time. Better players should play worse players and also under the same
// conditions as everybody else.
// 128 - Does not make no sense in duel.
// 256 - Does not make no sense in duel.
// 512 - Does not make no sense in duel.
// 1024 - Does not make no sense in duel.
// 2048 - End game voting is good to change the map quickly and also to see unkown maps in the map pool.
// 4096 - Does not make no sense in duel.
// 8192 - Might be an option for worse players who try to learn.
set g_voteFlags "6142"

// ....................... Time Limits/Round Settings ....................... //

// Ratio of players that must be ready before the match starts.
// Default: set sv_warmupReadyPercentage "0.51"
set sv_warmupReadyPercentage "0.51"

// Wait x seconds before allowing match to start to allow all players to connect.
// Default: set g_warmupDelay "15"
// set g_warmupDelay "15"

// Force the game to start after x seconds after someone readies up.
// Default: set g_warmupReadyDelay "0"
//
// RATIONALE
// There are no delays which annoys if the other player does not ready up and
// then leaves anyway. Thus a value here is a highly recommended. A lot of servers
// do 120 seconds which is a bit stretching. Some do 10 seconds which is a little
// short. 60 should be a good value.
set g_warmupReadyDelay "60"

// Set to 1 to force players to spectator after g_warmupReady Delay, 2 to force ready up.
// Default: set g_warmupReadyDelayAction "1"
//
// RATIONALE
// If someone joins a server the person should be ready play. If she/he does
// not want to then she/he should leave.
set g_warmupReadyDelayAction "2"

// Kick players who are inactive for X amount of seconds.
// 0 - disabled
// Default: set g_inactivity "0"
//
// RATIONALE
// Some people just idle on servers which is annoying because the server browser gives
// the impression that someone is waiting which is not true. People should be kicked
// when inactive. 10 minutes is a good value here. It is enough time to go to toilet,
// talk to partner or something else. For the other player it might be ok to wait that long.
set g_inactivity "10"

// ............................. Communication ............................. //

// Voice Comms
// 0 - Limit voice comms to teams only during the match.
// 1 - Allow all players to talk to each other.
// Default: set g_alltalk "0"
// set g_alltalk "0"

// ................................ Network ................................ //

// Which IP to bind to. Blank will bind to all interfaces.
set net_ip ""

// Server port (UDP)
// Blank - Will increment until finds an empty unbound. net_strict must be 0
// Default: set net_port "27960"
// IMPORTANT: Do not change this setting here but set it in the Docker Compose file.
// set net_port "27960"

// Quit out immediately if we can't bind the IP and port.
// Default: set net_strict "1"
// IMPORTANT: Do not change this setting because Docker will restart the server is
// something went wrong which it will not do if this is set to 0.
set net_strict "1"

// Server Type
// 0 - Offline
// 1 - LAN
// 2 - Internet
// Default: set sv_serverType "2"
set sv_serverType "2"

// ................................ Remote Admin ................................ //

// Enable remote console, provided through ZeroMQ. See zmq_rcon.py for simple client.
// ZMQ rcon binds on a separate port from the game server, and uses TCP. It must differ from the stats port if used.
// Rcon can not be enabled or disabled after launch, nor can the IP and port change. Password can, however.

// Enable rcon
// Default: set zmq_rcon_enable "1"
set zmq_rcon_enable "1"

// Which IP to bind to. Blank will bind to all interfaces.
set zmq_rcon_ip ""

// Rcon port
// default: set zmq_rcon_port "28960"
// IMPORTANT: Do not change this setting here but set it in the Docker Compose file.
set zmq_rcon_port "28960"

// Rcon password
set zmq_rcon_password "ADMINPASSWORD"

// Enable ZeroMQ stats socket. This will not be much use without a client listening.
// See zmq_stats_verbose.py for example connect and stats printing.
// If not specified, the stats socket will default to the same IP and port as the game server, but on TCP.

// Enable ZeroMQ stats
//
// RATIONALE
// Website like QLStats are vital for the Quake Live scene. Every server therefor should have
// sending stats enabled to help to evolve the community.
set zmq_stats_enable "1"

// Which IP to bind to. Blank will bind to all interfaces.
// set zmq_stats_ip ""

// ZeroMQ stats port (TCP)
// IMPORTANT: Do not change this setting here but set it in the Docker Compose file.
set zmq_stats_port "27960"

// ZeroMQ stats password
set zmq_stats_password "quakeliveserverstandards"

// ............................ Flood Protection ............................ //

// Flood protection will increment everytime the user sends a client command.
// Excluding: dropweapon, changing name, color, model, or chatting.
// Set g_floodprot_maxcount to 0 to disable flood protection, but this not reccomended.

// Kick a player when their userinfo flood counter reaches this level.
// Default: set g_floodprot_maxcount "10"
// Disable: set g_floodprot_maxcount "0"
set g_floodprot_maxcount "10"

// Kick a player when they reach X commands, decreases by 1 every second
// Default: set sv_floodprotect "10"
set sv_floodprotect "10"

// Decrease the userinfo flood counter by 1 this often, in milliseconds.
// Default: set g_floodprot_decay "1000"
set g_floodprot_decay "1000"

// Used to determine which 64-bit Steam IDs have admin access, or are banned.
// IMPORTANT: Do not change this setting because the Docker Compose file relies on the location.
set g_accessFile "access.txt"

// ................................ System Settings ................................ //

// Show in server browser and respond to queries. This will also affect the LAN Broswer
// Default: set sv_master "1"
set sv_master "1"

// Change how many frames the server runs per second. WARNING: Has not been tested extensively, and will have a direct impact on CPU and network usage!
set sv_fps "40"

// Exit the server if idle (not running a map) for a specified time. This will allow it to automatically restart
// in the case of a game error or other problem. A value of "1" is recommended, but not default, when you are running
// the server detached from the terminal.
set sv_idleExit "120"

// May need to be increased for additional players.
set com_hunkMegs "60"